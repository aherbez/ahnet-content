package {	import flash.events.Event;	import  GameObject;		public class Enemy extends GameObject	{		protected var steps:int;		protected var playerRef:Player;				protected var colliding:Boolean;			public function Enemy(p:Player)		{			this.playerRef = p;						this.x = Math.random() * 400;			this.y = Math.random() * 400;						this.colliding = false;						this.attack = 5;			this.health = 1;						this.steps = Math.floor(Math.random() * 10) + 2;						this.mySpeed = 5;			this.dir = 2;		}				protected function collideWithPlayer()		{						this.playerRef.damage(this.attack);			this.damage(this.playerRef.attackStr);		}			// protected function updateMe(evt:Event)		override protected function updateMe(evt:Event)		{			// keep the engine running			super.updateMe(evt);						if (this.myState != STATE_DEAD)			{				// think				this.steps = this.steps - 1;				if (this.steps < 0)				{					// reset the countdown					this.steps = Math.floor(Math.random() * 10) + 2;									// choose a new direction					this.dir = Math.floor(Math.random() * 4) + 1;				}							// check for collision with player				if (this.hitTestObject(this.playerRef))				{					if (this.colliding == false)					{						this.colliding = true;						this.collideWithPlayer();					}				}				else				{					// if the enemy is no longer intersecting with the player, 					// reset the colliding flag					this.colliding = false;				}			}								}		}}