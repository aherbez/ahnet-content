// PLAYER CLASSpackage{	import flash.events.KeyboardEvent;	import flash.events.Event;	import flash.ui.Keyboard;	import GameObject;	public class Player extends GameObject	{		private static var _instance:Player;				public function Player()		{			_instance = this;						this.mySpeed = 6;			this.dir = 0;						this.x = 225;			this.y = 200;						this.attack = 5;			this.health = 100;						addEventListener(Event.ADDED_TO_STAGE,init);		}				public function get instance():Player		{			return this;		}				public function setAttack(newAttack:Number)		{			this.attack = newAttack;			trace('Player attack: ' + this.attack);		}				override public function damage(d:Number)		{			super.damage(d);			Game.instance.updatePlayerHealthBar(this.health);		}				private function init(evt:Event)		{			stage.addEventListener(KeyboardEvent.KEY_DOWN,changeDirection);			stage.addEventListener(KeyboardEvent.KEY_UP,stopMe);					}				override protected function destroy()		{			Game.instance.LoseGame();			super.destroy();		}				// called when a key is released		private  function stopMe(evt:KeyboardEvent)		{			// trace('key released');			this.dir = 0;		}				// called when a key is pressed		private function changeDirection(evt:KeyboardEvent)		{			// trace('key pressed');						switch (evt.keyCode)			{				case Keyboard.UP:					this.dir = 1;					break;				case Keyboard.RIGHT:					this.dir = 2;					break;				case Keyboard.DOWN:					this.dir = 3;					break;				case Keyboard.LEFT:					this.dir = 4;					break;			}							}		}}