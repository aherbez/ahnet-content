package{	import flash.display.MovieClip;	import flash.events.Event;		public class GameObject extends MovieClip	{				protected static const STATE_ALIVE:int = 1;		protected static const STATE_DEAD:int = 2;				protected var mySpeed:Number;		protected var dir:int;		protected var attack:Number;		protected var health:Number;		protected var maxHealth:Number;				protected var healthBar:MovieClip;				protected var myState:int;				public function GameObject()		{			// trace('new game object!');			this.myState = STATE_ALIVE;						this.addEventListener(Event.ENTER_FRAME,updateMe);		}				public function get attackStr():Number		{			return this.attack;		}				// class destructor: perform any necessary cleanup here		protected function destroy()		{			this.removeEventListener(Event.ENTER_FRAME,updateMe);			this.parent.removeChild(this);		}				public function damage(d:Number)		{			if (this.myState != STATE_DEAD)			{				this.health = this.health - d;				if (this.health <= 0)				{					this.myState = STATE_DEAD;				}			}		}				public function isDead():Boolean		{			if (this.myState == STATE_DEAD)			{				return true;			}			else			{				return false;			}					}				protected function updateMe(evt:Event)		{			// trace('updating!');						if (this.myState != STATE_DEAD)			{							switch(this.dir)				{					case 0:						break;					case 1:						// move up						this.y = this.y - this.mySpeed;						break;					case 2:						// move right						this.x = this.x + this.mySpeed;						break;					case 3:						// move down						this.y = this.y + this.mySpeed;						break;					case 4: 						// move left 						this.x = this.x - this.mySpeed;						break;				}			}			else			{				// perform cleanup and remove this object				destroy();			}		}			}	}