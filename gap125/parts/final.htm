<h1>Final Project</h1>

<p>The final project should be something that you are excited to work on, and that you can see including on your website / resume / etc as a portfolio piece. As such, there aren't many hard-and-fast requirements other than:</p>

<ol>
<li>It must be implemented in C++</li>
<li>It should invovle classes / Object-Oriented-Programming</li>
<li>It should be of appropriate scope / size / ambition</li>
</ol>

<p>Of the above, the third requirement is the most vague- basically what I'm looking for is that your project represents a reasonable amount of work, given that you will have a full three weeks to work on it</p>

<p>I realize that that's still not very concrete, but that's one of the reasons I asked for project proposals at week 9- so that we could start talking about your project, and I could help you modify scope. If you have any questions about whether or not your project is big enough, please email me.</p>

<h2>Grading Policy</h2>

<p>The final project will be graded in a manner similar to the projects we've had so far. I'll be looking at your code and grading it based on whether or not it works, and how well implmented / clear it is. I will also be looking to see that it is big enough to represent three weeks of work.</p>

<h3>Interim submissions</h3>

<p>I will be expecting an in-progress submission at the one and two week mark in advance of the final submission on week 15. Each of these will contribute 5 points to the final grade. Note that I won't be grading the interim submission on correctness or cleanliness- I just want to make sure that everyone is working on the project over the course of three weeks, rather than waiting until the last minute.</p>

<p>Of course, if you <em>do</em> wait until the last minute, but still turn in something that is incredibly well done, you might score enough points to offset the loss of 10 points from not turning in interim submissions at weeks 13 and 14, but it's a riskier strategy.</p>

<h3>Using Git / Github (EXTRA CREDIT)</h3>

<p>Source control systems are a major part of being a professional engineer, and git is currently the most popular one. Github makes it easy to use git with your own projects, and can be a great way to allow potential employers to see what you can do. Setting upan an account on github is free, and well worth your time.</p>

<p>In order to encourage you guys to get used to using git, I am offering an extra 5 points on the final to anyone that submits their project to me as a git repository hosted on github.</p>

<p>To learn how to work with github, go to <a href="https://github.com/">githum.com</a> and follow their interative tutorial. You should also check out <a href="https://www.codeschool.com/courses/try-git">CodeSchool.com's free git tutorial</a> to learn more about git itself.</p>

<p>To be clear- this is entirely optional- you can still just submit a zip file to my email account as with all the other assignments so far. However, it's also a very easy way to add +5 to your grade for the final.</p>

<h3>Grading policy summary</h3>

<p>Here is a summary of how your final will be graded</p>

<ul>
<li><strong>based grade (90 points):</strong> based on the same criteria as I've applied to all of the other coding assingments so far. I will grade your project as I have all the others, and multiply the total by 0.90</li>
<li><strong>week 13 interim submission (5 points):</strong> did you submit something to me before the start of week 13's class? Note that I don't expect the project to be anywhere near complete, or bug-free. I just want to see evidence of work</li>
<li><strong>week 14 interim submission (5 points):</strong> did you submit something to me before the start of week 14's class?</li>
<li><strong>Submit via github (5 points, extra credit):</strong> As explained above, anyone that hands in their assignment via github will receive an extra 5 points on top of what they would otherwise earn as extra credit</li>
</ul>

<p>So, let's say that a given student submits B-level work (85), turns in interim progress at both week 13 and 14, and takes the time to set up a github account. Their grade for the final would be:</p>

<p>(85 * 0.9) + 5 + 5 + 5 = 91.5 (A)</p>

<p>On the other hand, let's say that another student does A-level work (95), but doesn't turn anything in until week 15 and doesn't bother with github. That person's grade on the final would be:</p>

<p>(95 * 0.9) + 0 + 0 + 0 = 85.5 (B)</p>

<h2>Using Graphics</h2>

<p>I don't recommend using graphics for your final project, but if you want to go that route, I suggest looking into the SDL library. See <a href="http://lazyfoo.net/SDL_tutorials/">here</a> for some good tutorials. SDL isn't hard, but getting it setup on your system can be a challenge.</p>

<p>If you do intend to use graphics, it is a <strong>requirement</strong> that you show me that you have SDL working at week 13. This doesn't have to be very invovled, but I expect to see a window and some graphics (equivalent to <a href="http://lazyfoo.net/SDL_tutorials/lesson01/index2.php">this example</a>).</p>