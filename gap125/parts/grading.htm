<h1>Grading Policy</h1>

<p>
The purpose of this course is to prepare you for a role in the demanding field of game development. As such, the grading policy is structured to reflect what would be considered either merely adequate, or superlative in a work setting.</p>

<p>I will not be enforcing a curve- it is quite possible that everyone in the class will earn an A, or that everyone in the class would fail (though I certainly don't expect that).</p>

<p>Be aware, though, that As will not be given out for passing work.</p>

<h2>Grading overview</h2>

<p>The following is an overview of what each letter grade corresponds to, in terms of number ranges and qualitative characteristics. This is the standards by which I will be judging your assignments, the midterm, and the final.</p>

<table class="table">
	<thead>
		<th>Grade</th>
		<th>Numerical Range</th>
		<th>Description</th>
	</thead>

	<tr>
		<td>A</td>
		<td>100-90</td>
		<td>Consistently superlative work that adds substantial functionality while maintaining a high level of polish</td>
	</tr>

	<tr>
		<td>B</td>
		<td>89-80</td>
		<td>
			Code compiles and produces correct results, and is implemented in a clean, professional manner.
		</td>
	</tr>

	<tr>
		<td>C</td>
		<td>79-70</td>
		<td>
		Code compiles and runs successfully. All features are fully implemented and produce correct results.
		</td>
	</tr>

	<tr>
		<td>D</td>
		<td>69-60</td>
		<td>
		Code that compiles, but produces incorrect results.
		</td>
	</tr>

	<tr>
		<td>F</td>
		<td>59-0</td>
		<td>
		Project fails to compile, is not turned in, etc.
		</td>
	</tr>		
</table>

<p>In other words, for each assignment...
<ul>
<li>if you turn the project in on time and it compiles, you'll get at least a D</li>
<li>if it also works as expected and provides correct results, you'll get at least a C</li>
<li>if it is also implemented in a clean, professional way, you <em>may</em> get a B</li>
<li>if it also includes substantial additional effort (extra features, especially good structure, etc), you <em>may</em> get an A</li>
</ul>
</p>

<p>
A bit more on the A-C range. From the above, you can see that a C is worth at least 70 points. The remaining 30 will come from the following:

<ul>
<li><h4>Structure (0-10 points)</h4>Is the code broken up in a sensible way? 
Things that will help you do well in this section include: 
<ul>
	<li>make sure that your functions do a single thing with little to no side effects</li>
	<li>that your variables are limited in scope.</li>
</ul>
</li>
<li><h4>Readibility (0-10 points)</h4>Is the code clean, and would it be easy for other people to understand it? Things that matter for this include:
<ul>
<li>Comments are used liberally, and clearly explain what's happening</li>
<li>Good adherance to the AAU coding style</li>
</ul>

</li>
<li><h4>Extras (0-10 points)</h4>Additional work above and beyond the problem description, such as:
<ul>
	<li>Adding additional functionality?</li>
	<li>Handling use cases not explicitly mentioned in the problem description</li>
</ul>
</li>
</ul>

<h3>Late submissions</h3>

<p><strong>All assignments are due before the start of the following class (3:40pm the Friday after they are assigned)</strong></p>

<p>If you hand in an assignment late, it will be docked 10 points per day, up to a maximum of 30 points.</p>

<p>So, if you turn in absolutely stellar work 3 or more days late, the absolute highest grade you can earn would be a C (100 - 30 = 70). However, it will always be better for you to have turned in the assignment for at least some points, than to have skipped it entirely. 
</p>

<p>If you know in advance that you will not be able to complete an assignment on time due to outisde issues (such as travel, family obligations, etc), let me know as soon as you can and we can likely work out alternate arrangements.</p>
